2+2
2+2
2+2
1:100
print('Test')
x<-1
x <- 1
print(x)
y <- c(x,2,3,4,'b')
0:10
seq(10)
seq(10,0)
seq(0,10)
(y <- c(1,5,10,100))
y <- c(x,2,3,4,'b')
(y <- c(1,5,10,100))
(z <- c(1,5,10,100))
y <- c(x,2,3,4,'b')
x+z
a = x+z
b = x + y
b = x * z
x <- 2
y <- c(x,2,3,4,'b')
x+z
a = x+z
b = x * z
2^6
6^2
a^2
rm
rm(list = ls())
2+2
1:100
print('Test')
x <- 2
print(x)
y <- c(x,2,3,4,'b')
0:10
seq(10)
seq(0,10)
(z <- c(1,5,10,100))
x+z
a = x+z
b = x * z
2^6
6^2
a^2
source('~/.active-rstudio-document')
# Data Types   ####
n1 <- 10
2+2
1:100
print('Test')
x <- 2
print(x)
y <- c(x,2,3,4,'b')
0:10
seq(10)
seq(0,10)
(z <- c(1,5,10,100))
x+z
a = x+z
b = x * z
2^6
6^2
a^2
rm(list = ls())
# Data Types   ####
n1 <- 10
typeof(n1)
c1 <- 'Character'
c2 <- typeof(c1)
c2
l1 <- true
l1 <- TRUE
typeof(l1)
l2 <- F
typeof(l2)
### Data Structures ####
v1 <- c(1:10)
typeof(v1)
#Clean Up ####
clear
#Clean Up ####
clr
#Clean Up ####
rm(list = ls())
n2 <- 2.3
typeof(n2)
is.vector()
is.vector(v1)
:10)
typeof(v1)
is.vector(
v1 <- c(1:10)
typeof(v1)
is.vector(v1)
# Vector ==== 1 dim collection of numbers #
v1 <- c(1:10)
typeof(v1)
is.vector(v1)
v2 <- c('a', 'b', 'c')
v2
is.vector(v2)
v3 <- c(TRUE FALSE TRUE TRUE)
v3 <- c(TRUE, FALSE, TRUE, TRUE)
typeof(v3)
is.vector(v3)
m1 <- matrix(v3, nrow = 2)
m1
v2 <- c('a', 'b', 'c', 'd')
m2 <- matrix(v2, nrow = 2)
m2
m2 <- matrix(v2, nrow = 2, byrow = T)
m2
m2 <- matrix(v2, nrow = 2)
m2
m3 <- matrix(v2, nrow = 2, byrow = T)
m3
m4 <- matrix(a1, a2, a3, a4, nrow=2)
a1 <- 1
a2 <- 2
a3 <- 3
a4 <- 4
m4 <- matrix(a1, a2, a3, a4, nrow=2)
a5 <- c(a1, a2, a3, a4)
m4 <- matrix(a5, nrow=2)
m4
x1 <- 1
x2 <- 2
x3 <- 3
x4 <- 4
x5 <- c(x1, x2, x3, x4)
m4 <- matrix(x5, nrow=2)
m4
a1 <- array(c(1:24),c(4,3,2))
a1
a1 <- array(c(1:24),c(4,3,1))
a1
a1 <- array(c(1:24),c(4,3,3))
a1
x1 <- 1
x2 <- 2
x3 <- 3
x4 <- d
x5 <- c(x1, x2, x3, x4)
m4 <- matrix(x5, nrow=2)
m4
vN <- c(1,2,3)
vC <- c('a','b','c','d')
vL <- c(F,T,T,F,T)
df1 <- c(vN,vC,vL)
df1
df1 <- cbind(vN,vC,vL)
df1
vN <- c(1,2,3)
vC <- c('a','b','c')
vL <- c(F,T,T)
df1 <- c(vN,vC,vL)
df1
vN <- c(1,2,3)
vC <- c('a','b','c')
vL <- c(F,T,T)
df1 <- cbind(vN,vC,vL)
df1
df2 <- as.data.frame(df1)
df2
o1 <- c(1,2,3)
o2 <- c('a','b','c','d','e')
o3 <- c(T,F,T,F)
list1 <- list(o1,o2,o3)
list1
# Data Types   ####
# Numeric - Double ####
n1 <- 10
typeof(n1)
n2 <- 2.3
typeof(n2)
# Character #####
c1 <- 'Character'
c2 <- typeof(c1)
c2
# Logical ####
l1 <- TRUE
typeof(l1)
l2 <- F
typeof(l2)
# Data Structures ####
## Vector ####
## Vector - 1 dim collection of numbers #
### Everything is R is vector, even if there is a single number
v1 <- c(1:10)
typeof(v1)
is.vector(v1)
v2 <- c('a', 'b', 'c', 'd')
v2
is.vector(v2)
v3 <- c(TRUE, FALSE, TRUE, TRUE)
typeof(v3)
is.vector(v3)
## Matrix ####
# defualt filled by columns
m1 <- matrix(v3, nrow = 2)
m1
m2 <- matrix(v2, nrow = 2)
m2
m3 <- matrix(v2, nrow = 2, byrow = T)
m3
x1 <- 1
x2 <- 2
x3 <- 3
x4 <- d
x5 <- c(x1, x2, x3, x4)
m4 <- matrix(x5, nrow=2)
m4
## Array ####
# more than 2 dimension matrix
a1 <- array(c(1:24),c(4,3,2))
a1
## Data Frame ####
vN <- c(1,2,3)
vC <- c('a','b','c')
vL <- c(F,T,T)
df1 <- cbind(vN,vC,vL)
df1
df2 <- as.data.frame(df1)
df2
## List ####
o1 <- c(1,2,3)
o2 <- c('a','b','c','d','e')
o3 <- c(T,F,T,F)
list1 <- list(o1,o2,o3)
list1
## Coerce ####
#Clean Up ####
rm(list = ls())
# Data Types   ####
# Numeric - Double ####
n1 <- 10
typeof(n1)
n2 <- 2.3
typeof(n2)
# Character #####
c1 <- 'Character'
c2 <- typeof(c1)
c2
# Logical ####
l1 <- TRUE
typeof(l1)
l2 <- F
typeof(l2)
# Data Structures ####
## Vector ####
## Vector - 1 dim collection of numbers #
### Everything is R is vector, even if there is a single number
v1 <- c(1:10)
typeof(v1)
is.vector(v1)
v2 <- c('a', 'b', 'c', 'd')
v2
is.vector(v2)
v3 <- c(TRUE, FALSE, TRUE, TRUE)
typeof(v3)
is.vector(v3)
## Matrix ####
# defualt filled by columns
m1 <- matrix(v3, nrow = 2)
m1
m2 <- matrix(v2, nrow = 2)
m2
m3 <- matrix(v2, nrow = 2, byrow = T)
m3
x1 <- 1
x2 <- 2
x3 <- 3
x4 <- d
x5 <- c(x1, x2, x3, x4)
m4 <- matrix(x5, nrow=2)
m4
## Array ####
# more than 2 dimension matrix
a1 <- array(c(1:24),c(4,3,2))
a1
## Data Frame ####
vN <- c(1,2,3)
vC <- c('a','b','c')
vL <- c(F,T,T)
df1 <- cbind(vN,vC,vL)
df1
df2 <- as.data.frame(df1)
df2
## List ####
o1 <- c(1,2,3)
o2 <- c('a','b','c','d','e')
o3 <- c(T,F,T,F)
list1 <- list(o1,o2,o3)
list1
View(df2)
n11 <- as.integer(n1)
typeof(n11)
coerce1 <- as.data.frame(v3)
coerce1
coerce1 <- matrix(1:9, nrow = 3)
coerce2 <- as.data.frame(coerce1)
coerce1
coerce2
source('~/Novartis/Work/Trainings/R/Training Projects/Basic/LinkedIn/basic02.R', echo=TRUE)
# LOAD BASE PACKAGE ####
library(datasets)
?datasets
library(help = 'datasets')
?iris
iris
?UCBAdmissions
UCBAdmissions
as.data.frame(iris)
iris_d <- as.data.frame(iris)
View(iris_d)
ucb < - as.data.frame(UCBAdmissions)
ucb < - as.data.frame(UCBAdmissions)
ucb1 < - as.data.frame(UCBAdmissions)
?UCBAdmissions
ucb1 < - as.data.frame(UCBAdmissions)
?UCBAdmissions
UCBAdmissions
?Titanic
Titanic
?pacman
??pacman
installed.packages()
pdf <- as.data.frame(installed.packages())
View(pdf)
menu(mtcars$mpg)
mtcars
df <- mtcars
View(df)
means(mtcars$mpg)
mean(mtcars$mpg)
matrix(c(1,2,3,4,5,6,7,8),nrow = 4, ncol = 2)
matrix(c(1,2,3,4,5,6,7,8),nrow = 4, ncol = 2)
example <- matrix(c(1,2,3,4,5,6,7,8),nrow = 4, ncol = 2)
View(example)
?iris
iris
installed.packages()
df <- installed.packages()
View(df)
library()
df1 <- library()
View(df1)
View(df1)
View(df1)
View(df1)
View(df1)
df1 <- library()
library(haven)
library(haven)
?haven
df <- installed.packages()
View(df)
version
install.packages("haven")
library(haven)
detach(haven)
detach(haven)
detach("package:haven", unload = T)
remove.packages("haven")
install.packages("haven")
install.packages("haven")
library("haven")
sessionInfo()
sessionInfo()
sessionInfo()
help(package = "haven")
browseVignettes("haven")
install.packages("KernSmooth")
library(KernSmooth)
